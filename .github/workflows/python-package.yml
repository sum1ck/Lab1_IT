name: Python App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Додати виконання тестів
      - name: Run Unit Tests
        run: |
          python -m unittest discover -s tests  # Запускаємо тести з директорії "tests"

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --hidden-import PyQt5 --hidden-import numpy --add-data "methods;methods" main.py

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v3
        with:
          name: solver-executable
          path: dist/main.exe

      # Генерація тега
      - name: Generate release tag
        id: tag
        run: |
          $TAG_NAME = "v" + (Get-Date -Format "yyyyMMddHHmmss")  # Створення тега на основі дати в PowerShell
          Write-Output "Generated release tag: $TAG_NAME"
          echo "::set-output name=release_tag::$TAG_NAME"

      # Створення релізу за допомогою створеного тега
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}  # Використовуємо тег, згенерований в попередньому кроці
          files: dist/main.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
